{"version":3,"sources":["components/Header/index.jsx","components/Footer/index.jsx","components/DataTable/Pagination/index.jsx","components/DeleteDialog/index.jsx","components/EditDialog/index.jsx","components/RemoveDialog/index.jsx","components/DataTable/index.jsx","components/AppendDialog/index.jsx","store/actions.js","constants/index.js","pages/CoursesList/index.jsx","pages/StudentsList/index.jsx","App.js","store/reducers.js","store/index.js","serviceWorker.js","index.js"],"names":["Header","location","useLocation","history","useHistory","className","TabNavigation","Tab","isSelected","pathname","onSelect","push","Footer","Pagination","props","pageCount","currentPage","setCurrentPage","firstPage","lastPage","pageButtons","i","Button","key","appearance","onClick","Pane","display","disabled","Text","DeleteDialog","dataType","rowData","onCloseComplete","onConfirm","id","name","Dialog","isShown","title","intent","close","confirmLabel","EditDialog","useState","newName","setNewName","courseData","TextInputField","label","value","onChange","e","target","onKeyUp","keyCode","DataTable","headers","data","updateRow","deleteRow","removeRow","rowsOnPage","setRowsOnPage","sortingParams","toggleSorting","removeMode","deleteRowId","setDeleteRowId","removeRowId","setRemoveRowId","editRowId","setEditRowId","useEffect","Math","ceil","length","startIndex","pageData","slice","headersWithoutName","filter","marginLeft","Table","border","Head","paddingRight","TextHeaderCell","TextDropdownButton","icon","field","direction","map","flexBasis","flexShrink","flexGrow","textAlign","toUpperCase","Body","row","Row","isSelectable","TextCell","Cell","IconButton","stopPropagation","Select","flex","width","height","find","RemoveDialog","itemList","checkedItems","setCheckedItems","setFilter","SearchInput","placeholder","toLowerCase","includes","Checkbox","checked","item","addNewCourse","createAction","updateCourse","deleteCourse","courseId","changeCourcesNumberOnPage","addNewStudent","studentData","updateStudent","deleteStudent","studentId","changeStudentsNumberOnPage","addCourseToStudent","addStudentToCourse","deleteStudentFromCourse","deleteCourseFromStudent","CoursesList","state","dataFilter","showAddNewCourse","showAppendCourses","setState","this","match","params","students","sort","rowDataA","rowDataB","a","b","lastId","addCoursesToStudent","Heading","size","getVacantCourses","getProcessedData","AppendDialog","coursesId","studentsId","Component","connect","courses","dispatch","withRouter","StudentsList","showAddNewStudent","showAppendStudents","addStudentsToCourse","getVacantStudents","App","from","to","exact","path","component","render","handleActions","action","payload","combineActions","appState","combineReducers","persistConfig","storage","persistedReducer","persistReducer","middleware","thunk","store","createStore","applyMiddleware","persistor","persistStore","Boolean","window","hostname","ReactDOM","loading","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.63e3c4cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {TabNavigation, Tab} from 'evergreen-ui';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport './style.scss';\r\n\r\nconst Header = () => {\r\n  const location = useLocation();\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <header className=\"header\" >\r\n      <h2 className=\"title\" >\r\n        Courses & Students - Siemple SPA\r\n      </h2>\r\n      <TabNavigation className=\"navigation\" >\r\n        <Tab \r\n          isSelected={location.pathname === '/courses'}\r\n          onSelect={() => history.push('/courses')}\r\n        >\r\n          Courses\r\n        </Tab>\r\n        <Tab\r\n          isSelected={location.pathname === '/students'}\r\n          onSelect={() => history.push('/students')}\r\n        >\r\n          Students\r\n        </Tab>\r\n      </TabNavigation>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      &copy; Alexandr Chebotar\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {Pane, Text, Button} from 'evergreen-ui';\r\n\r\nimport './style.scss';\r\n\r\nconst Pagination = (props) => {\r\n  const {pageCount, currentPage, setCurrentPage} = props;\r\n  const firstPage = (currentPage < 4) ? 1 \r\n    : (pageCount - currentPage > 2) ? currentPage - 3 \r\n    : (pageCount - 6 < 1) ? 1\r\n    : pageCount - 6;\r\n  const lastPage = (pageCount < 7) ? pageCount\r\n    : (firstPage + 6 > pageCount) ? pageCount\r\n    : (currentPage + 3 > pageCount) ? pageCount\r\n    : (currentPage < 4) ? firstPage + 6\r\n    : currentPage + 3;\r\n  let pageButtons = [];\r\n  for (let i = firstPage; i <= lastPage; i++) {\r\n    pageButtons.push(\r\n      <Button key={i} appearance={i === currentPage ? 'primary' : 'default'} onClick={() => setCurrentPage(i)} >\r\n        {i}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n      <Pane className=\"pagination\" display=\"flex\">\r\n        <Button disabled={currentPage === firstPage} onClick={() => setCurrentPage(currentPage - 1)} >Previous</Button>\r\n        {firstPage !== 1 &&\r\n          <Text>...</Text>\r\n        }\r\n        {pageButtons}\r\n        {lastPage !== pageCount &&\r\n          <Text>...</Text>\r\n        }\r\n        <Button disabled={currentPage === lastPage} onClick={() => setCurrentPage(currentPage + 1)} >Next</Button>\r\n      </Pane>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport {Dialog} from 'evergreen-ui';\r\n\r\nconst DeleteDialog = ({dataType, rowData = {}, onCloseComplete, onConfirm}) => {\r\n  const {id, name} = rowData;\r\n  return (\r\n    <Dialog\r\n      isShown={true}\r\n      title={`Delete ${name}?`}\r\n      intent=\"danger\"\r\n      onConfirm={close => {onConfirm(id); close();}}\r\n      onCloseComplete={onCloseComplete}\r\n      confirmLabel=\"Delete\"\r\n    >\r\n      {`Are you sure you want to delete ${dataType} ${name}?`} \r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import React, {useState} from 'react';\r\nimport {Dialog, TextInputField} from 'evergreen-ui';\r\n\r\nconst EditDialog = ({dataType, rowData = {}, onCloseComplete, onConfirm}) => {\r\n  let {name = `New ${dataType}`} = rowData;\r\n  const [newName, setNewName] = useState(name);\r\n  const courseData = {...rowData, name: newName};\r\n\r\n  return (\r\n    <Dialog\r\n      isShown={true}\r\n      title={name}\r\n      onConfirm={close => {onConfirm(courseData); close();}}\r\n      onCloseComplete={onCloseComplete}\r\n      confirmLabel=\"Save\"\r\n    >\r\n      <TextInputField \r\n        label={'Name'}\r\n        value={newName}\r\n        onChange={e => setNewName(e.target.value)} \r\n        onKeyUp={e => {\r\n          if (e.keyCode === 13) {\r\n            onConfirm(courseData);\r\n            onCloseComplete();\r\n          }\r\n        }}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditDialog;\r\n","import React from 'react';\r\nimport {Dialog} from 'evergreen-ui';\r\n\r\nconst DeleteDialog = ({dataType, rowData = {}, onCloseComplete, onConfirm}) => {\r\n  const {id, name} = rowData;\r\n\r\n  return (\r\n    <Dialog\r\n      isShown={true}\r\n      title={`Remove ${name}?`}\r\n      intent=\"danger\"\r\n      onConfirm={close => {onConfirm(id); close();}}\r\n      onCloseComplete={onCloseComplete}\r\n      confirmLabel=\"Remove\"\r\n    >\r\n      {`Are you sure you want to remove ${dataType} ${name}?`} \r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import React, {Fragment, useState, useEffect} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Table, TextDropdownButton, IconButton, Pane, Text, Select} from 'evergreen-ui';\r\nimport Pagination from './Pagination';\r\nimport DeleteDialog from '../DeleteDialog';\r\nimport EditDialog from '../EditDialog';\r\nimport RemoveDialog from '../RemoveDialog';\r\n\r\nimport './style.scss';\r\n\r\nconst DataTable = ({headers, data, dataType, updateRow, deleteRow, removeRow, rowsOnPage, setRowsOnPage, sortingParams, toggleSorting, removeMode}) => {\r\n  let history = useHistory();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [deleteRowId, setDeleteRowId] = useState(null);\r\n  const [removeRowId, setRemoveRowId] = useState(null);\r\n  const [editRowId, setEditRowId] = useState(null);\r\n  useEffect(() => {setCurrentPage(1)}, [data, rowsOnPage]);\r\n  const pageCount = Math.ceil(data.length / rowsOnPage);\r\n  const startIndex = (currentPage-1)*rowsOnPage;\r\n  const pageData = data.slice(startIndex, startIndex + rowsOnPage);\r\n  const headersWithoutName = headers.filter(name => name !== 'name');\r\n\r\n  return (\r\n    <div className=\"data-table\">\r\n      <Pane display=\"flex\">\r\n        <Pane marginLeft=\"auto\">\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            pageCount={pageCount}\r\n            rowsOnPage={rowsOnPage}\r\n            setCurrentPage={setCurrentPage}\r\n            setRowsOnPage={setRowsOnPage}\r\n          />\r\n        </Pane>\r\n      </Pane>\r\n      <Table border >\r\n        <Table.Head paddingRight={60} >\r\n          <Table.TextHeaderCell> \r\n            <TextDropdownButton\r\n              onClick={() => toggleSorting('name')}\r\n              icon={(sortingParams.field !== 'name') ? 'blank'\r\n                : (sortingParams.direction === 'asc') ? 'arrow-down'\r\n                : 'arrow-up'\r\n              }\r\n            >\r\n              {'Name'}\r\n            </TextDropdownButton>\r\n          </Table.TextHeaderCell>\r\n          {headersWithoutName.map(name => (\r\n            <Table.TextHeaderCell key={name} flexBasis={120} flexShrink={0} flexGrow={0} textAlign=\"center\" >\r\n              <TextDropdownButton\r\n                onClick={() => toggleSorting(name)}\r\n                icon={(sortingParams.field !== name) ? 'blank'\r\n                  : (sortingParams.direction === 'asc') ? 'arrow-down'\r\n                  : 'arrow-up'\r\n                }\r\n              >\r\n                {name[0].toUpperCase() + name.slice(1)}\r\n              </TextDropdownButton>\r\n            </Table.TextHeaderCell>\r\n          ))}\r\n        </Table.Head>\r\n        <Table.Body>\r\n          {pageData.map(row => (\r\n              <Table.Row\r\n                key={row.id}\r\n                isSelectable\r\n                onSelect={() => history.push('/' + dataType +'s/' + row.id)}\r\n              >\r\n                <Table.TextCell> {row.name} </Table.TextCell>\r\n                {headersWithoutName.map(name => (\r\n                  <Table.TextCell key={name} flexBasis={120} flexShrink={0} flexGrow={0} textAlign=\"center\">\r\n                    {(name === 'students' || name === 'courses') ? row[name].length : row[name]}\r\n                  </Table.TextCell>\r\n                ))}\r\n                <Table.Cell flexBasis={60} flexShrink={0} flexGrow={0} textAlign=\"center\">\r\n                  {removeMode ?\r\n                      <IconButton\r\n                        icon=\"remove\" appearance=\"minimal\" intent=\"danger\"\r\n                        onClick={e => {setRemoveRowId(row.id); e.stopPropagation();}}\r\n                      />\r\n                    :\r\n                      <Fragment>\r\n                        <IconButton\r\n                          icon=\"edit\" appearance=\"minimal\" intent=\"success\"\r\n                          onClick={e => {setEditRowId(row.id); e.stopPropagation();}}\r\n                        />\r\n                        <IconButton\r\n                          icon=\"trash\" appearance=\"minimal\" intent=\"danger\"\r\n                          onClick={e => {setDeleteRowId(row.id); e.stopPropagation();}}\r\n                        />\r\n                      </Fragment>\r\n                  }\r\n                </Table.Cell>\r\n              </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n      <Pane display=\"flex\" >\r\n        <Pane className=\"pagination\" >\r\n          <Text>{`${dataType[0].toUpperCase() + dataType.slice(1)}s on page:`}</Text>\r\n          <Select value={rowsOnPage} onChange={e => setRowsOnPage(+e.target.value)} flex=\"none\" width={60} height={24}>\r\n            <option value={5}>5</option>\r\n            <option value={10}>10</option>\r\n            <option value={15}>15</option>\r\n            <option value={20}>20</option>\r\n            <option value={30}>30</option>\r\n            <option value={50}>50</option>\r\n            <option value={100}>100</option>\r\n          </Select>\r\n          <Text>{`, total ${dataType}s: ${data.length}.`}</Text>\r\n        </Pane>\r\n        <Pane marginLeft=\"auto\">\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            pageCount={pageCount}\r\n            rowsOnPage={rowsOnPage}\r\n            setCurrentPage={setCurrentPage}\r\n            setRowsOnPage={setRowsOnPage}\r\n          />\r\n        </Pane>\r\n      </Pane>\r\n      {editRowId &&\r\n        <EditDialog\r\n        dataType={dataType}\r\n        rowData={data.find(row => row.id === editRowId)}\r\n        onConfirm={updateRow}\r\n        onCloseComplete={() => setEditRowId(null)}\r\n        />\r\n      }\r\n      {deleteRowId &&\r\n        <DeleteDialog\r\n          dataType={dataType}\r\n          rowData={data.find(row => row.id === deleteRowId)}\r\n          onConfirm={deleteRow}\r\n          onCloseComplete={() => setDeleteRowId(null)}\r\n        />\r\n      }\r\n      {removeRowId &&\r\n        <RemoveDialog\r\n          dataType={dataType}\r\n          rowData={data.find(row => row.id === removeRowId)}\r\n          onConfirm={removeRow}\r\n          onCloseComplete={() => setRemoveRowId(null)}\r\n        />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState} from 'react';\r\nimport {Dialog, Checkbox, SearchInput} from 'evergreen-ui';\r\n\r\nconst EditDialog = ({dataType, itemList, onCloseComplete, onConfirm}) => {\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  return (\r\n    <Dialog\r\n      isShown={true}\r\n      title={`Append ${dataType}s`}\r\n      onConfirm={close => {onConfirm(checkedItems); close();}}\r\n      onCloseComplete={onCloseComplete}\r\n      confirmLabel=\"Save\"\r\n    >\r\n      <SearchInput\r\n        className=\"search-input\" placeholder=\"Search...\" \r\n        onChange={e => setFilter(e.target.value.toLowerCase())}\r\n      />\r\n      {\r\n        itemList\r\n          .filter(({name}) => name.toLowerCase().includes(filter))\r\n          .map(({name, id}) => (\r\n            <Checkbox\r\n              key={id}\r\n              label={name}\r\n              checked={checkedItems.includes(id)}\r\n              onChange={e => {\r\n                if (e.target.checked) {\r\n                  setCheckedItems([...checkedItems, id])\r\n                } else {\r\n                  setCheckedItems(checkedItems.filter(item => item !== id))\r\n                }\r\n              }}\r\n            />\r\n          ))\r\n      }\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditDialog;\r\n","import {\r\n  ADD_NEW_COURSE,\r\n  UPDATE_COURSE,\r\n  DELETE_COURSE,\r\n  CHANGE_COURCES_NUMBER_ON_PAGE,\r\n  ADD_NEW_STUDENT,\r\n  UPDATE_STUDENT,\r\n  DELETE_STUDENT,\r\n  CHANGE_STUDENTS_NUMBER_ON_PAGE,\r\n  ADD_COURSES_TO_STUDENT,\r\n  ADD_STUDENTS_TO_COURSE,\r\n  DELETE_STUDENT_FROM_COURSE,\r\n  DELETE_COURSE_FROM_STUDENT,\r\n} from '../constants';\r\nimport {createAction} from 'redux-actions';\r\n\r\nexport const addNewCourse = createAction(ADD_NEW_COURSE, courseData => ({courseData}));\r\nexport const updateCourse = createAction(UPDATE_COURSE, courseData => ({courseData}));\r\nexport const deleteCourse = createAction(DELETE_COURSE, courseId => ({courseId}));\r\nexport const changeCourcesNumberOnPage = createAction(CHANGE_COURCES_NUMBER_ON_PAGE, rowsOnPage => ({rowsOnPage}));\r\nexport const addNewStudent = createAction(ADD_NEW_STUDENT, studentData => ({studentData}));\r\nexport const updateStudent = createAction(UPDATE_STUDENT, studentData => ({studentData}));\r\nexport const deleteStudent = createAction(DELETE_STUDENT, studentId => ({studentId}));\r\nexport const changeStudentsNumberOnPage = createAction(CHANGE_STUDENTS_NUMBER_ON_PAGE, rowsOnPage => ({rowsOnPage}));\r\nexport const addCourseToStudent = createAction(ADD_COURSES_TO_STUDENT);\r\nexport const addStudentToCourse = createAction(ADD_STUDENTS_TO_COURSE);\r\nexport const deleteStudentFromCourse = createAction(DELETE_STUDENT_FROM_COURSE);\r\nexport const deleteCourseFromStudent = createAction(DELETE_COURSE_FROM_STUDENT);\r\n","export const ADD_NEW_COURSE = 'ADD_NEW_COURSE';\r\nexport const UPDATE_COURSE = 'UPDATE_COURSE';\r\nexport const DELETE_COURSE = 'DELETE_COURSE';\r\nexport const CHANGE_COURCES_NUMBER_ON_PAGE = 'CHANGE_COURCES_NUMBER_ON_PAGE';\r\nexport const ADD_NEW_STUDENT = 'ADD_NEW_STUDENT';\r\nexport const UPDATE_STUDENT = 'UPDATE_STUDENT';\r\nexport const DELETE_STUDENT = 'DELETE_STUDENT';\r\nexport const CHANGE_STUDENTS_NUMBER_ON_PAGE = 'CHANGE_STUDENTS_NUMBER_ON_PAGE';\r\nexport const ADD_COURSES_TO_STUDENT = 'ADD_COURSES_TO_STUDENT';\r\nexport const ADD_STUDENTS_TO_COURSE = 'ADD_STUDENTS_TO_COURSE';\r\nexport const DELETE_STUDENT_FROM_COURSE = 'DELETE_STUDENT_FROM_COURSE';\r\nexport const DELETE_COURSE_FROM_STUDENT = 'DELETE_COURSE_FROM_STUDENT';\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Text, Heading, IconButton, SearchInput} from 'evergreen-ui';\r\nimport {Helmet} from 'react-helmet-async';\r\nimport DataTable from '../../components/DataTable';\r\nimport EditDialog from '../../components/EditDialog';\r\nimport AppendDialog from '../../components/AppendDialog';\r\nimport {\r\n  addNewCourse,\r\n  updateCourse,\r\n  deleteCourse,\r\n  addCourseToStudent,\r\n  deleteCourseFromStudent,\r\n  changeCourcesNumberOnPage,\r\n} from '../../store/actions';\r\n\r\nconst headers = ['name', 'id', 'students']\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {    \r\n    addNewCourse: (courseData) => dispatch(addNewCourse(courseData)),\r\n    addCoursesToStudent: ({coursesId, studentsId}) => dispatch(addCourseToStudent({coursesId, studentsId})),\r\n    updateCourse: (courseData) => dispatch(updateCourse(courseData)),\r\n    deleteCourse: (courseId) => dispatch(deleteCourse(courseId)),\r\n    deleteCourseFromStudent: ({courseId, studentId}) => dispatch(deleteCourseFromStudent({courseId, studentId})),\r\n    changeCourcesNumberOnPage: (rowsOnPage) => dispatch(changeCourcesNumberOnPage(rowsOnPage)),\r\n  }\r\n};\r\nconst mapStateToProps = ({courses, students}) => {\r\n  return {...courses, students};\r\n};\r\n\r\nclass CoursesList extends Component {\r\n  state = {\r\n    dataFilter: '',\r\n    showAddNewCourse: false,\r\n    showAppendCourses: false,\r\n    sortingParams: {field: 'name', direction: 'asc'},\r\n  };\r\n\r\n  toggleSorting = field => this.setState(({sortingParams}) => ({\r\n    sortingParams: {\r\n      field,\r\n      direction: (field === sortingParams.field && sortingParams.direction === 'asc') ? 'desc' : 'asc',\r\n    },\r\n  }));\r\n  getProcessedData() {\r\n    const {studentId} = this.props.match.params;\r\n    const {dataFilter, sortingParams} = this.state;\r\n    return this.props.data\r\n      .filter(({name, students}) => {\r\n        if (studentId && !students.includes(studentId)) {\r\n          return false;\r\n        }\r\n        if (name.toLowerCase().includes(dataFilter)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n      .sort((rowDataA, rowDataB) => {\r\n        const {field, direction} = sortingParams;\r\n        let a, b;\r\n        if (direction === 'asc') {\r\n          [b, a] = [rowDataB[field], rowDataA[field]];\r\n        } else {\r\n          [a, b] = [rowDataB[field], rowDataA[field]];\r\n        }\r\n        if (field === 'id') {\r\n          [a, b] = [a, b].map(id => +id.slice(1));\r\n        }\r\n        if (field === 'students') {\r\n          [a, b] = [a, b].map(students => students.length);\r\n        }\r\n        if (a > b) {\r\n          return 1;\r\n        }\r\n        if (a < b) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n  };\r\n  getVacantCourses() {\r\n    const {studentId} = this.props.match.params;\r\n    return this.props.data.filter(({students}) => !students.includes(studentId));\r\n  };\r\n\r\n\r\n  render() {\r\n    const {students, rowsOnPage, lastId, match, addNewCourse, addCoursesToStudent,\r\n      updateCourse, deleteCourse, deleteCourseFromStudent, changeCourcesNumberOnPage} = this.props;\r\n    const {showAddNewCourse, showAppendCourses, sortingParams} = this.state;\r\n    const {studentId} = match.params;\r\n    const studentData = students.data.find(({id}) => id === studentId);\r\n    const title = studentData ? studentData.name\r\n      : studentId ? `Error: student not exists!`\r\n      : 'Courses';\r\n\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <Heading>\r\n          {title}\r\n          {studentId &&\r\n            <Text size={500}>\r\n              {` (student id - ${studentId})`}\r\n            </Text>\r\n          }\r\n        </Heading>\r\n        <div className=\"controls\">\r\n          <IconButton\r\n            className=\"add-button\" icon=\"plus\" appearance=\"primary\" intent=\"success\"\r\n            onClick={() => this.setState({[studentId ? 'showAppendCourses' : 'showAddNewCourse']: true})}\r\n            disabled={studentId && !this.getVacantCourses().length}\r\n          />\r\n          <SearchInput \r\n            className=\"search-input\" placeholder=\"Search...\"\r\n            onChange={e => this.setState({dataFilter: e.target.value.toLowerCase()})}\r\n          />\r\n        </div>\r\n        <DataTable\r\n          data={this.getProcessedData()}\r\n          rowsOnPage={rowsOnPage}\r\n          dataType=\"course\"\r\n          headers={headers}\r\n          updateRow={updateCourse}\r\n          deleteRow={deleteCourse}\r\n          removeRow={(courseId) => deleteCourseFromStudent({courseId, studentId})}\r\n          setRowsOnPage={changeCourcesNumberOnPage}\r\n          sortingParams={sortingParams}\r\n          toggleSorting={this.toggleSorting}\r\n          removeMode={!!studentId}\r\n        />\r\n        {showAddNewCourse &&\r\n          <EditDialog\r\n            dataType=\"course\"\r\n            lastId={lastId}\r\n            onConfirm={addNewCourse}\r\n            onCloseComplete={() => this.setState({showAddNewCourse: false})}\r\n          />\r\n        }\r\n        {showAppendCourses &&\r\n          <AppendDialog\r\n            dataType=\"course\"\r\n            itemList={this.getVacantCourses()}\r\n            onConfirm={(coursesId) => addCoursesToStudent({coursesId, studentsId: [studentId]})}\r\n            onCloseComplete={() => this.setState({showAppendCourses: false})}\r\n          />\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CoursesList));\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Text, Heading, IconButton, SearchInput} from 'evergreen-ui';\r\nimport {Helmet} from 'react-helmet-async';\r\nimport DataTable from '../../components/DataTable';\r\nimport EditDialog from '../../components/EditDialog';\r\nimport AppendDialog from '../../components/AppendDialog';\r\nimport {\r\n  addNewStudent,\r\n  updateStudent,\r\n  deleteStudent,\r\n  addStudentToCourse,\r\n  deleteStudentFromCourse,\r\n  changeStudentsNumberOnPage\r\n} from '../../store/actions';\r\n\r\nconst headers = ['name', 'id', 'courses']\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {    \r\n    addNewStudent: (studentData) => dispatch(addNewStudent(studentData)),\r\n    addStudentsToCourse: ({coursesId, studentsId}) => dispatch(addStudentToCourse({coursesId, studentsId})),\r\n    updateStudent: (studentData) => dispatch(updateStudent(studentData)),\r\n    deleteStudent: (studentId) => dispatch(deleteStudent(studentId)),\r\n    deleteStudentFromCourse: ({courseId, studentId}) => dispatch(deleteStudentFromCourse({courseId, studentId})),\r\n    changeStudentsNumberOnPage: (rowsOnPage) => dispatch(changeStudentsNumberOnPage(rowsOnPage)),\r\n  }\r\n};\r\nconst mapStateToProps = ({students, courses}) => {\r\n  return {...students, courses};\r\n};\r\n\r\nclass StudentsList extends Component {\r\n  state = {\r\n    dataFilter: '',\r\n    showAddNewStudent: false,\r\n    showAppendStudents: false,\r\n    sortingParams: {field: 'name', direction: 'asc'},\r\n  };\r\n\r\n  toggleSorting = field => this.setState(({sortingParams}) => ({\r\n    sortingParams: {\r\n      field,\r\n      direction: (field === sortingParams.field && sortingParams.direction === 'asc') ? 'desc' : 'asc',\r\n    },\r\n  }));\r\n  getProcessedData() {\r\n    const {courseId} = this.props.match.params;\r\n    const {dataFilter, sortingParams} = this.state;\r\n    return this.props.data\r\n      .filter(({name, courses}) => {\r\n        if (courseId && !courses.includes(courseId)) {\r\n          return false;\r\n        }\r\n        if (name.toLowerCase().includes(dataFilter)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n      .sort((rowDataA, rowDataB) => {\r\n        const {field, direction} = sortingParams;\r\n        let a, b;\r\n        if (direction === 'asc') {\r\n          [b, a] = [rowDataB[field], rowDataA[field]];\r\n        } else {\r\n          [a, b] = [rowDataB[field], rowDataA[field]];\r\n        }\r\n        if (field === 'id') {\r\n          [a, b] = [a, b].map(id => +id.slice(1));\r\n        }\r\n        if (field === 'courses') {\r\n          [a, b] = [a, b].map(courses => courses.length);\r\n        }\r\n        if (a > b) {\r\n          return 1;\r\n        }\r\n        if (a < b) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n  };\r\n  getVacantStudents() {\r\n    const {courseId} = this.props.match.params;\r\n    return this.props.data.filter(({courses}) => !courses.includes(courseId));\r\n  };\r\n\r\n  render() {\r\n    const {courses, rowsOnPage, lastId, match, addNewStudent, addStudentsToCourse,\r\n      updateStudent, deleteStudent, deleteStudentFromCourse, changeStudentsNumberOnPage} = this.props;\r\n    const {showAddNewStudent, showAppendStudents, sortingParams} = this.state;\r\n    const {courseId} = match.params;\r\n    const courseData = courses.data.find(({id}) => id === courseId);\r\n    const title = courseData ? courseData.name\r\n      : courseId ? `Error: course not exists!`\r\n      : 'Students';\r\n\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <Heading>\r\n          {title}\r\n          {courseId &&\r\n            <Text size={500}>\r\n              {` (course id - ${courseId})`}\r\n            </Text>\r\n          }\r\n        </Heading>\r\n        <IconButton\r\n          className=\"add-button\" icon=\"plus\" appearance=\"primary\" intent=\"success\"\r\n          onClick={() => this.setState({[courseId ? 'showAppendStudents' : 'showAddNewStudent']: true})}\r\n          disabled={courseId && !this.getVacantStudents().length}\r\n        />\r\n        <SearchInput \r\n          className=\"search-input\" placeholder=\"Search...\" \r\n          onChange={e => this.setState({dataFilter: e.target.value.toLowerCase()})}\r\n        />\r\n        <DataTable\r\n          data={this.getProcessedData()}\r\n          rowsOnPage={rowsOnPage}\r\n          dataType=\"student\"\r\n          headers={headers}\r\n          updateRow={updateStudent}\r\n          deleteRow={deleteStudent}\r\n          removeRow={(studentId) => deleteStudentFromCourse({studentId, courseId})}\r\n          setRowsOnPage={changeStudentsNumberOnPage}\r\n          sortingParams={sortingParams}\r\n          toggleSorting={this.toggleSorting}\r\n          removeMode={!!courseId}\r\n        />\r\n        {showAddNewStudent &&\r\n          <EditDialog\r\n            dataType=\"student\"\r\n            lastId={lastId}\r\n            onConfirm={addNewStudent}\r\n            onCloseComplete={() => this.setState({showAddNewStudent: false})}\r\n          />\r\n        }\r\n        {showAppendStudents &&\r\n          <AppendDialog\r\n            dataType=\"student\"\r\n            itemList={this.getVacantStudents()}\r\n            onConfirm={(studentsId) => addStudentsToCourse({studentsId, coursesId: [courseId]})}\r\n            onCloseComplete={() => this.setState({showAppendStudents: false})}\r\n          />\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(StudentsList));\r\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport {Helmet} from 'react-helmet-async';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport CoursesList from './pages/CoursesList';\nimport StudentsList from './pages/StudentsList';\n\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <title>Courses & Students - Simple SPA</title>\n      </Helmet>\n      <Header />\n      <div className=\"content\">\n        <Switch className=\"content\">\n          <Redirect from=\"/\" to=\"/courses\" exact/>\n          <Route path=\"/courses/:courseId\" component={StudentsList} exact />\n          <Route path=\"/courses\" component={CoursesList} exact />\n          <Redirect from=\"/courses\" to=\"/courses\"/>\n\n          <Route path=\"/students/:studentId\" component={CoursesList} exact />\n          <Route path=\"/students\" component={StudentsList} exact />\n          <Redirect from=\"/students\" to=\"/students\"/>\n\n          <Route path=\"/404\" exact render={() => <p>Error 404: page not found</p>} />\n          <Redirect from=\"/\" to=\"/404\"/>\n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  ADD_NEW_COURSE,\r\n  UPDATE_COURSE,\r\n  DELETE_COURSE,\r\n  CHANGE_COURCES_NUMBER_ON_PAGE,\r\n  ADD_NEW_STUDENT,\r\n  UPDATE_STUDENT,\r\n  DELETE_STUDENT,\r\n  CHANGE_STUDENTS_NUMBER_ON_PAGE,\r\n  ADD_COURSES_TO_STUDENT,\r\n  ADD_STUDENTS_TO_COURSE,\r\n  DELETE_STUDENT_FROM_COURSE,\r\n  DELETE_COURSE_FROM_STUDENT,\r\n} from '../constants';\r\nimport {combineReducers} from 'redux'; \r\nimport {handleActions, combineActions} from 'redux-actions';\r\n\r\nconst courses = handleActions(\r\n  {\r\n    [ADD_NEW_COURSE]: (state, action) => {\r\n      const lastId = state.lastId[0] + (+state.lastId.slice(1) + 1);\r\n      const courseData = {...action.payload.courseData, id: lastId, students: []};\r\n      return ({\r\n        ...state,\r\n        data: [...state.data, courseData],\r\n        lastId,\r\n      });\r\n    },\r\n    [UPDATE_COURSE]: (state, action) => {\r\n      const {courseData} = action.payload;\r\n      const courseId = courseData.id;\r\n      const data = [...state.data.filter(({id}) => id !== courseId), courseData];\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n    [DELETE_COURSE]: (state, action) => {\r\n      const {courseId} = action.payload;\r\n      const data = state.data.filter(({id}) => id !== courseId);\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n    [CHANGE_COURCES_NUMBER_ON_PAGE]: (state, action) => ({\r\n        ...state,\r\n        ...action.payload,\r\n    }),\r\n    [combineActions(\r\n      ADD_COURSES_TO_STUDENT,\r\n      ADD_STUDENTS_TO_COURSE\r\n    )]: (state, action) => {\r\n      const {coursesId, studentsId} = action.payload;\r\n      const data = state.data.map(courseData => {\r\n        const {id, students} = courseData;\r\n        return ({\r\n          ...courseData,\r\n          students: (coursesId.includes(id)) ? [...students, ...studentsId] : students,\r\n        });\r\n      });\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n    [combineActions(\r\n      DELETE_STUDENT_FROM_COURSE,\r\n      DELETE_COURSE_FROM_STUDENT\r\n    )]: (state, action) => {\r\n      const {courseId, studentId} = action.payload;\r\n      const data = state.data.map(courseData => {\r\n        const {id, students} = courseData;\r\n        return ({\r\n          ...courseData,\r\n          students: (id === courseId) ? students.filter((id) => id !== studentId) : students,\r\n        });\r\n      });\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n    [DELETE_STUDENT]: (state, action) => {\r\n      const {studentId} = action.payload;\r\n      const data = state.data.map(courseData => ({\r\n        ...courseData,\r\n        courses: courseData.students.filter((id) => id !== studentId)\r\n      }));\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n  },\r\n  {\r\n    data: [\r\n      {id: 'c1', name: 'JS', students: ['s1', 's2', 's3' ,'s4', 's5', 's6', 's7', 's8', 's9', 's10', 's11', 's12', 's13', 's14', 's15', 's16']},\r\n      {id: 'c2', name: 'Python', students: ['s1', 's2', 's3' ,'s4', 's5', 's6', 's7', 's8', 's9', 's10']},\r\n      {id: 'c3', name: 'Vue', students: ['s1', 's2', 's3' ,'s4', 's5', 's6', 's7', 's8', 's9', 's10']},\r\n      {id: 'c4', name: 'Angular', students: ['s1', 's2', 's3' ,'s4', 's5', 's6', 's7', 's8', 's9', 's10']},\r\n      {id: 'c5', name: 'React', students: ['s1', 's2', 's3' ,'s4', 's5', 's6', 's7', 's8', 's9', 's10']},\r\n      {id: 'c6', name: 'C', students: ['s1', 's11', 's12', 's13', 's14', 's15', 's16']},\r\n      {id: 'c7', name: 'C#', students: ['s1', 's11', 's12', 's13', 's14', 's15', 's16']},\r\n      {id: 'c8', name: 'Django', students: ['s1', 's14', 's15', 's16']},\r\n    ],\r\n    lastId: 'c8',\r\n    rowsOnPage: 5,\r\n  }\r\n);\r\nconst students = handleActions(\r\n  {\r\n    [ADD_NEW_STUDENT]: (state, action) => {\r\n      const lastId = state.lastId[0] + (+state.lastId.slice(1) + 1);\r\n      const studentData = {...action.payload.studentData, id: lastId, courses: []};\r\n      return ({\r\n        ...state,\r\n        data: [...state.data, studentData],\r\n        lastId,\r\n      });\r\n    },\r\n    [UPDATE_STUDENT]: (state, action) => {\r\n      const {studentData} = action.payload;\r\n      const studentId = studentData.id;\r\n      const data = [...state.data.filter(({id}) => id !== studentId), studentData];\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n    [DELETE_STUDENT]: (state, action) => {\r\n      const {studentId} = action.payload;\r\n      const data = state.data.filter(({id}) => id !== studentId);\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n    [CHANGE_STUDENTS_NUMBER_ON_PAGE]: (state, action) => ({\r\n        ...state,\r\n        ...action.payload,\r\n    }),\r\n    [combineActions(\r\n      ADD_COURSES_TO_STUDENT,\r\n      ADD_STUDENTS_TO_COURSE\r\n    )]: (state, action) => {\r\n      const {coursesId, studentsId} = action.payload;\r\n      const data = state.data.map(studentData => {\r\n        const {id, courses} = studentData;\r\n        return ({\r\n          ...studentData,\r\n          courses: (studentsId.includes(id)) ? [...courses, ...coursesId] : courses,\r\n        });\r\n      });\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n    [combineActions(\r\n      DELETE_STUDENT_FROM_COURSE,\r\n      DELETE_COURSE_FROM_STUDENT\r\n    )]: (state, action) => {\r\n      const {courseId, studentId} = action.payload;\r\n      const data = state.data.map(studentData => {\r\n        const {id, courses} = studentData;\r\n        return ({\r\n          ...studentData,\r\n          courses: (id === studentId) ? courses.filter((id) => id !== courseId) : courses,\r\n        });\r\n      });\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n    [DELETE_COURSE]: (state, action) => {\r\n      const {courseId} = action.payload;\r\n      const data = state.data.map(studentData => ({\r\n        ...studentData,\r\n        courses: studentData.courses.filter((id) => id !== courseId)\r\n      }));\r\n      return ({\r\n        ...state,\r\n        data,\r\n      });\r\n    },\r\n  },\r\n  {\r\n    data: [\r\n      {id: 's1', name: 'Victoria Abril', courses: ['c1', 'c2', 'c3' ,'c4', 'c5', 'c6', 'c7', 'c8']},\r\n      {id: 's2', name: 'Goodman Ace', courses: ['c1', 'c2', 'c3' ,'c4', 'c5']},\r\n      {id: 's3', name: 'Johnny Ace', courses: ['c1', 'c2', 'c3' ,'c4', 'c5']},\r\n      {id: 's4', name: 'Derek Acorah', courses: ['c1', 'c2', 'c3' ,'c4', 'c5']},\r\n      {id: 's5', name: 'Ross Alexander', courses: ['c1', 'c2', 'c3' ,'c4', 'c5']},\r\n      {id: 's6', name: 'Johnny Alf', courses: ['c1', 'c2', 'c3' ,'c4', 'c5']},\r\n      {id: 's7', name: 'Rashied Ali', courses: ['c1', 'c2', 'c3' ,'c4', 'c5']},\r\n      {id: 's8', name: 'Mary Alice', courses: ['c1', 'c2', 'c3' ,'c4', 'c5']},\r\n      {id: 's9', name: 'Leslie Banks', courses: ['c1', 'c2', 'c3' ,'c4', 'c5']},\r\n      {id: 's10', name: 'Harold Bennett', courses: ['c1', 'c2', 'c3' ,'c4', 'c5']},\r\n      {id: 's11', name: 'Ivy Close', courses: ['c1', 'c6', 'c7']},\r\n      {id: 's12', name: 'Noël Coward', courses: ['c1', 'c6', 'c7']},\r\n      {id: 's13', name: 'Cedric Hardwicke', courses: ['c1', 'c6', 'c7']},\r\n      {id: 's14', name: 'Kathleen Harrison', courses: ['c1', 'c6', 'c7', 'c8']},\r\n      {id: 's15', name: 'Leslie Howard', courses: ['c1', 'c6', 'c7', 'c8']},\r\n      {id: 's16', name: 'Jack Lambert', courses: ['c1', 'c6', 'c7', 'c8']},\r\n    ],\r\n    lastId: 's16',\r\n    rowsOnPage: 10,\r\n  }\r\n);\r\n\r\nexport const appState = combineReducers({\r\n  courses,\r\n  students,\r\n});\r\n","import {createStore\r\n, applyMiddleware\r\n} from 'redux'; \r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {appState} from './reducers';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, appState);\r\n\r\nlet middleware = [thunk];\r\nif (process.env.NODE_ENV === 'development') {\r\n  middleware = [...middleware, logger];\r\n} else {\r\n  middleware = [...middleware];\r\n}\r\n\r\nconst store = createStore(\r\n  persistedReducer, \r\n  applyMiddleware(...middleware)\r\n);  \r\nconst persistor = persistStore(store);\r\n\r\nexport {store, persistor, persistConfig};\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport App from './App';\nimport {store, persistor} from './store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <HelmetProvider>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <App />\n        </BrowserRouter>\n      </HelmetProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}